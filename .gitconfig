[core]
    excludesfile = ~/.gitignore
    longpaths = true
    pager = less -FXi
    autocrlf = false
[diff]
    tool = meld
[difftool]
    prompt = false
[difftool "meld"]
    cmd = meld "$LOCAL" "$REMOTE"
[commit]
    template = ~/.stCommitMsg
[alias]
    co = checkout
    cm = commit --message
    ca = commit --amend
    sw = switch
    s = status -sb
    br = branch
    lo = log --pretty=format:"%C(yellow)%h%x09%C(blue)%>(12)%an%x09%C(red)%ad%x09%Creset%s" --date=relative
    lof = log --pretty=format:"%C(yellow)%h%x09%C(blue)%>(12)%an%x09%C(red)%ad%x09%Creset%s" --date=rfc
    f=fetch
    swf = !git for-each-ref --format='%(refname:short)' refs/heads | fzf | xargs git sw
    su= submodule update --init --recursive
    dft=difftool --dir-diff
    conflicts = diff --name-only --diff-filter=U
    root=rev-parse --show-toplevel
[merge]
    tool = meld
[mergetool "meld"]
    cmd = meld "$LOCAL" "$MERGED" "$REMOTE" --output "$MERGED"
[alias]
    find-merge = "!sh -c 'commit=$0 && branch=${1:-HEAD} && (git rev-list $commit..$branch --ancestry-path | cat -n; git rev-list $commit..$branch --first-parent | cat -n) | sort -k2 -s | uniq -f1 -d | sort -n |  tail -1 | cut -f2'"
    show-merge = "!sh -c 'merge=$(git find-merge $0 $1) && [ -n \"$merge\" ] && git show $merge'"
[color]
    ui = auto
[fetch]
    prune = true
[user]
	name = Lonenso
	email = xyx19961107@qq.com
[includeIf "gitdir:~/work/"]
    path = ~/work/.gitconfig
[filter "lfs"]
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true
	clean = git-lfs clean -- %f
