[core]
	excludesfile = ~/.gitignore
	longpaths = true
	pager = less -FXi
	autocrlf = false
[diff]
    tool = meld
[difftool]
    prompt = false
[difftool "meld"]
    cmd = meld "$LOCAL" "$REMOTE"
[commit]
	template = ~/.stCommitMsg
[alias]
	co = checkout
	cm = commit --message
    s = status -sb
	st = status -s
	br = branch
    lo = log --pretty=format:"%C(yellow)%h%x09%C(blue)%>(12)%an%x09%C(red)%ad%x09%Creset%s" --date=relative
    lof = log --pretty=format:"%C(yellow)%h%x09%C(blue)%>(12)%an%x09%C(red)%ad%x09%Creset%s" --date=rfc
    f=fetch
	cof = !git for-each-ref --format='%(refname:short)' refs/heads | fzf | xargs git checkout
    su= submodule update --init --recursive
    rsu= reset --hard --recurse-submodule
    dft=difftool --dir-diff
[merge]
    tool = meld
[mergetool "meld"]
    cmd = meld "$LOCAL" "$MERGED" "$REMOTE" --output "$MERGED"
[alias]
  find-merge = "!sh -c 'commit=$0 && branch=${1:-HEAD} && (git rev-list $commit..$branch --ancestry-path | cat -n; git rev-list $commit..$branch --first-parent | cat -n) | sort -k2 -s | uniq -f1 -d | sort -n |  tail -1 | cut -f2'"
  show-merge = "!sh -c 'merge=$(git find-merge $0 $1) && [ -n \"$merge\" ] && git show $merge'"
[color]
	ui = auto
[fetch]
    prune = true